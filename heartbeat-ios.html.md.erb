---
title: Configuring Heartbeat Monitor for iOS
owner: push notification service
---

<%= partial './end-of-life' %>

This topic describes how Pivotal Cloud Foundry (PCF) operators can configure the Push Notification Heartbeat Monitor app for iOS.

Heartbeat Monitor is a Cloud Foundry app deployed by the PCF Push Notification service to help you ensure the service runs correctly end-to-end. It does this by sending a push, or _heartbeat_, every minute to the devices registered with the app. You can also select the app in the Push dashboard to view its historical data.

Follow the instructions below to configure Heartbeat Monitor and run the companion iOS app on your device.

## <a id="before"></a> Prerequisites
<!-- The following invisible link puts this section in the subnav on the left of the page -->

To configure the Heartbeat Monitor app for iOS, you must have the following:

* An iOS 8+ device
* The latest Xcode that supports Swift 2.2 installed on your workstation
* An Apple Developer account

## <a id="request-ios-cert"></a> Request an iOS Development Certificate
<!-- The following invisible link puts this section in the subnav on the left of the page -->

Follow these steps to obtain an iOS development certificate:

1. Navigate to the **Certificates, Identifiers & Profiles** section of the [Apple Developer Portal](https://developer.apple.com/account/ios/certificate).

1. In the side navigation, select **Certificates** > **All**.

	![Select all](select-all.png)

1. Click the **+** button in the top right to add a new certificate.

	![Add Certificate](add-cert.png)

1. Select **iOS App Development** and click **Continue**.

	![Select Development Certificate](select-dev.png)

1. Follow the on-screen instructions to **Create a CSR file** and click **Continue**.

	![iOS CSR](csr.png)

1. **Upload** the `.csr` file you created and click **Continue** to generate the new certificate.

1. Click **Download**.

1. Open your certificate and import it to the Keychain Access app when prompted.

	![Add cert to Keychain](cert-to-keychain.png)


## <a id="request-apns-cert"></a> Request an APNS Certificate
<!-- The following invisible link puts this section in the subnav on the left of the page -->

Follow these steps to enable your app to receive push notifications:

### Create an App ID

1. Navigate to the **Certificates, Identifiers & Profiles** section of the [Apple Developer Portal](https://developer.apple.com/account/ios/certificate).

1. In the side navigation, select  **Identifiers** > **App IDs**.

1. Click the **+** button to create an App ID.

1. Enter an **Name** and a **Bundle ID**.

	![APNS Certs 2](app-id-name.png)

1. Select the **Push Notifications** checkbox and click **Continue**.

	![APNS Certs 3](push-checkbox.png)

1. Click **Register**.

### Create an APNS Certificate

1. In the **App IDs** list, select the App ID you registered and click **Edit**.

	![APNS Certs 5](edit-apns.png)

1. Under the **Push Notifications** section, choose **Development SSL Certificate** and click the corresponding **Create Certificate** button.

	![APNS Certs 6](apns-dev-cert.png)

1. Follow the on-screen instructions to create a new CSR.

1. **Upload** the `.csr` file you created and click **Continue** to generate the new certificate.

1. Click **Download**.

1. Open your certificate and import it to Keychain Access when prompted.

1. In **Keychain Access**, select both your **Apple Development iOS Push Services** certificate and the private key it was signed with.

	![APNS Certs 7](keychain-apns.png)

1. Right click your selection and choose **Export 2 Items...**

1. Save the **.p12** file for uploading to the Push dashboard in a later step.

	![APNS Certs 8](export-apns.png)

## <a id="create-provisioning-profile"></a> Create a Provisioning Profile
<!-- The following invisible link puts this section in the subnav on the left of the page -->

Follow these steps to create a Provisioning Profile that you specify when building the Heartbeat Monitor iOS app in Xcode:

### Register a Device

<p class="note"><strong>Note</strong>: You need an iOS 8+ Device to use Heartbeat Monitor. If you already have an iOS 8+ Device registered, skip to the next step.</p>

1. Navigate to the **Certificates, Identifiers & Profiles** section of the [Apple Developer Portal](https://developer.apple.com/account/ios/certificate).

1. In the side navigation, select **Devices** > **All**.

1. Click on the **+** button in the top right to add a device.

1. Retrieve the **UDID** of your device:
	1. Connect your device to your computer.
	1. Open **iTunes**.
	1. Select the device tab.

	![Provisioning 2](device-tab.png)

1. Click the **Serial Number** of the device to reveal the **UDID** and right click the field to copy it.

	![Provisioning 3](udid.png)

1. In the Apple Developer Portal, enter a **Name** for your device and paste the **UDID** into its field.

	![Register Device](register-device.png)

1. Click **Register**.

### Create a Profile

1. Navigate to the **Certificates, Identifiers & Profiles** section of the [Apple Developer Portal](https://developer.apple.com/account/ios/certificate).

1. In the side navigation, select **Provisioning Profiles** > **All**.

1. Click on the **+** button in the top right to create a Provisioning Profile.

1. Choose the **iOS App Development** type and click **Continue**.

1. From the **App ID** dropdown, select the App ID you created earlier and click **Continue**.

1. Select the **Developer Certificate(s)** that you want to use and click **Continue**.

1. Select the **Devices** that you registered and click **Continue**.

1. Provide a descriptive **Name** for the Provisioning Profile and click **Continue**.

1. Click **Download** and open your **Provisioning Profile**.

	<p class="note"><strong>Note</strong>: When you open your Provisioning Profile, Xcode installs it without providing any confirmation. In a later step, you configure your Xcode app project to use this Provisioning Profile.</p>

## <a id="push-config"></a> Configure your Push Dashboard
<!-- The following invisible link puts this section in the subnav on the left of the page -->

Follow these steps to navigate to the Push dashboard and then configure the service to talk to your device.

You can navigate to the Push dashboard using either Apps Manager or the Cloud Foundry Command Line Interface (cf CLI). Use the cf CLI instructions if you did not enable the <b>Push Apps Manager</b> errand when deploying Pivotal Application Service.

### Navigate to Push Dashboard using Apps Manager

1. In a browser, navigate to `apps.YOUR-SYSTEM-DOMAIN`.

1. Select the **system** org and the **push-notifications** space.

1. Click the **Services** tab.

1. Select the **PCF Push Notification Service** row and click the **Manage** link.

### Navigate to Push Dashboard using cf CLI

1. Open a terminal window and log in:

	<pre class="terminal">$ cf login -a https://api.YOUR-SYSTEM-DOMAIN -u USERNAME -p PASSWORD</pre>

1. Target the correct org and space:

	<pre class="terminal">$ cf target -o system -s push-notifications</pre>

1. Run the following command:

	<pre class="terminal">$ cf service push-service-instance</pre>

1. Copy the URL from the **Dashboard** field and paste it into your browser.


### Configure the Push Notification Service

1. Select the **Heartbeat App** from the list of applications.

	![Select app](heartbeat-app.png)

1. Select the **Configuration** pane.

	![Select Config](select-config.png)


1. Under the **Platforms** section, in the **Heartbeat iOS Platform** row, click the pencil icon to edit the record.

	![Edit Platform](edit-platform.png)

1. Complete the following fields:
	* **MODE**: Select `Development` from the dropdown menu.
	* **CERTIFICATE**: Click **Choose File** and upload the APNS certificate you created.
	* **PASSWORD**: Enter the password you used when creating your APNS certificate.

	![Choose File](choose-file.png)

1. Click **Save**.


## <a id="connect"></a> Run the App on Your Device
<!-- The following invisible link puts this section in the subnav on the left of the page -->

Follow these steps to open the project for the Heartbeat Monitor iOS app in Xcode and run the app on your device:

### Download the App Repo

1. Clone the Push iOS Heartbeat Monitor repository:

	<pre class="terminal">$ git clone git@github.com:cfmobile/push-ios-heartbeatmonitor.git</pre>

1. Run the following command to open the Xcode project:

	<pre class="terminal">$ open PCF\ Push\ Heartbeat\ Monitor.xcodeproj/</pre>

### Configure the App Project

1. In the Project Navigator, select the `Pivotal.plist` file.

	![Project Navigator](plist.png)

1. In the editor, change the value for `pivotal.push.serviceUrl` to the Push Notification API endpoint for your environment: `https://push-api.YOUR-SYSTEM-DOMAIN`.

	![API URL](api-url.png)

1. Ensure that the values for the following **Root** fields in the editor match the corresponding values in the Push dashboard under the **Heartbeat iOS Platform** record:
	<table>
		<tr>
			<th>Root Field in Editor</th>
			<th>Platform Field in Push Dashboard</th>
		</tr>
		<tr>
			<td><code>pivotal.push.platformUuidDevelopment</code></td>
			<td><b>Platform UUID</b></td>
		</tr>
		<tr>
			<td><code>pivotal.push.platformSecretDevelopment</code></td>
			<td><b>Platform Secret</b></td>
		</tr>
	</table>

1. Under the **General** tab, set the **Provisioning Profile** dropdowns to the profile you created earlier.

	<p class="note"><strong>Note</strong>: Do not select the checkbox to automatically manage signing.</p>

	![Enable Steps](choose-profile.png)

1. Under the **Capabilities** tab, ensure that both **Steps** are enabled for **Push Notifications**.

	![Enable Steps](capabilities.png)

1. If your PCF deployment does not use an SSL certificate signed by a Certificate Authority (CA), add an exception domain to the `info.plist` file by selecting **App Transport Security Settings** > **Exception Domains** and entering `push-api.YOUR-SYSTEM-DOMAIN`.

### Build and Run the App

1. At the top of the Xcode window, select the device icon and choose your device.
	![Select device](select-device.png)

1. Click the play button to build and run the app on your device.

1. Select **Allow** when the app asks if it can send you notifications.

	![allow notifs](app-screen.png)

	The screen updates with a new heartbeat count every minute as it receives pushes from your environment.

	<p class="note"><strong>Note</strong>: If you send a test push to your device from the Push dashboard, ensure the app is not open on your device. You cannot see the test push while the app is open.</p>
